CPU32 Instruction Set Architecture
----------------------------------

Encoding Formats
----------------

R OOOOFFFFAAAABBBBDDDDXXXXXXXXXXXX  register
I OOOOFFFFAAAADDDDIIIIIIIIIIIIIIII  immediate
L OOOOFFFFIIIIIIIIIIIIIIIIIIIIIIII  large (not currently used)

Core Instruction Set
--------------------

0X ALU Rd, Ra, Rb        see ALU ops below
1X ALU Rd, Ra, #I  

20 LW Rd, [Ra, #I]       Rd = M(Ra + I)    (TBD F->lane/width select)
30 SW Rd, [Ra, #I]       M(Ra + I) = Rd

41 BZ Ra, rel16          if Ra == 0: PC += I
42 BNZ Ra, rel16         if Ra != 0: PC += I
43 B rel16               PC += I
49 BLZ Ra, rel16         if Ra == 0: R15 = PC + 4, PC += I
4A BLNZ Ra, rel16        if Ra != 0: R15 = PC + 4, PC += I
4B BL rel16              R15 = PC + 4, PC += I

51 BZ Ra, Rb             if Ra == 0: PC = Rb
52 BNZ Ra, Rb            if Ra != 0: PC = Rb
53 B Rb                  PC = Rb
59 BNZ Ra, Rb            if Ra == 0: R15 = PC, PC = Rb
5A BLNZ Ra, Rb           if Ra != 0: R15 = PC, PC = Rb
5B BL Rb                 R15 = PC, PC = Rb

Extended Instruction Set
------------------------

60 J rel24               PC = PC + I
68 JL rel24              R15 = PC + 4, PC = PC + I

ALU Instructions (replace Rb w/ #I for immediate form)
------------------------------------------------------

X0 OR  Rd, Ra, Rb        Rd = Ra | Rb
X1 AND Rd, Ra, Rb        Rd = Ra & Rb
X2 ADD Rd, Ra, Rb        Rd = Ra + Rb
X3 SUB Rd, Ra, Rb        Rd = Ra - Rb
X4 SHL Rd, Ra, Rb        Rd = Ra << Rb[0:4]
X5 SHR Rd, Ra, Rb        Rd = Ra >> Rb[0:4]
X6 XOR Rd, Ra, Rb        Rd = Ra ^ Rb
X7 TBS Rd, Ra, Rb        Rd = Ra & (1 << Rb) ? 1 : 0

X8 SEQ Rd, Ra, Rb        Rd = Ra == Rb
X9 SLT Rd, Ra, Rb        Rd = Ra < Rb
XA SGT Rd, Ra, Rb        Rd = Ra > Rb
XB REV Rd, Ra            Rd = reversebits(Ra)
XC BIS Rd, Ra, Rb        Rd = Ra | (1 << Rb)
XD BIC Rd, Ra, Rb        Rd = Ra & ~(1 << Rb)
XE MOV Rd, Rb            Rd = Rb
XF MHI Rd, Ra, Rb        Rd = (Ra & 0xFFFF) | (Rb << 16)

Open Issues
-----------
- should ALU IMM16 be signed?  If so, how do we load unsigned data?
- consider dropping REV in favor of MOVU or MOVS?
- figure out func field coding for variant LW/SW instructions
- syntax for conditional branches is confusing
- consider allowing B [Rx] as well as B Rx?
- allow # in front of constants
